
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "generated/autoexamples/example_offresonance.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_generated_autoexamples_example_offresonance.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_generated_autoexamples_example_offresonance.py:


======================
Off-resonance Corrected NUFFT Operator
======================

Example of Off-resonance Corrected NUFFT trajectory operator.

This examples show how to use the Off-resonance Corrected NUFFT operator to acquire 
and reconstruct data in presence of field inhomogeneities.
Here a spiral trajectory is used as a demonstration.

.. GENERATED FROM PYTHON SOURCE LINES 13-21

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    from mrinufft import display_2D_trajectory

    plt.rcParams["image.cmap"] = "gray"





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /volatile/github-ci-mind-inria/action-runner/_work/_tool/Python/3.10.14/x64/lib/python3.10/site-packages/cupy/_environment.py:487: UserWarning: 
    --------------------------------------------------------------------------------

      CuPy may not function correctly because multiple CuPy packages are installed
      in your environment:

        cupy-cuda11x, cupy-cuda12x

      Follow these steps to resolve this issue:

        1. For all packages listed above, run the following command to remove all
           existing CuPy installations:

             $ pip uninstall <package_name>

          If you previously installed CuPy via conda, also run the following:

             $ conda uninstall cupy

        2. Install the appropriate CuPy package.
           Refer to the Installation Guide for detailed instructions.

             https://docs.cupy.dev/en/stable/install.html

    --------------------------------------------------------------------------------

      warnings.warn(f'''




.. GENERATED FROM PYTHON SOURCE LINES 22-26

Data Generation
===============
For realistic 2D image we will use a slice from the brainweb dataset.
installable using ``pip install brainweb-dl``

.. GENERATED FROM PYTHON SOURCE LINES 26-33

.. code-block:: Python


    from brainweb_dl import get_mri

    mri_data = get_mri(0, "T1")
    mri_data = mri_data[::-1, ...][90]
    plt.imshow(mri_data), plt.axis("off"), plt.title("ground truth")




.. image-sg:: /generated/autoexamples/images/sphx_glr_example_offresonance_001.png
   :alt: ground truth
   :srcset: /generated/autoexamples/images/sphx_glr_example_offresonance_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (<matplotlib.image.AxesImage object at 0x7452d69b4400>, (-0.5, 180.5, 216.5, -0.5), Text(0.5, 1.0, 'ground truth'))



.. GENERATED FROM PYTHON SOURCE LINES 34-39

Masking
===============
Here, we generate a binary mask to exclude the background.
We perform a simple binary threshold; in real-world application,
it is advised to use other tools (e.g., FSL-BET).

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python


    brain_mask = mri_data > 0.1 * mri_data.max()
    plt.imshow(brain_mask), plt.axis("off"), plt.title("brain mask")




.. image-sg:: /generated/autoexamples/images/sphx_glr_example_offresonance_002.png
   :alt: brain mask
   :srcset: /generated/autoexamples/images/sphx_glr_example_offresonance_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (<matplotlib.image.AxesImage object at 0x7452d65a8fd0>, (-0.5, 180.5, 216.5, -0.5), Text(0.5, 1.0, 'brain mask'))



.. GENERATED FROM PYTHON SOURCE LINES 44-48

Field Generation
===============
Here, we generate a radial B0 field with the same shape of
the input Shepp-Logan phantom

.. GENERATED FROM PYTHON SOURCE LINES 48-57

.. code-block:: Python


    from mrinufft.extras import make_b0map

    # generate field
    b0map, _ = make_b0map(mri_data.shape, b0range=(-200, 200), mask=brain_mask)
    plt.imshow(brain_mask * b0map, cmap="bwr", vmin=-200, vmax=200), plt.axis(
        "off"
    ), plt.colorbar(), plt.title("B0 map [Hz]")




.. image-sg:: /generated/autoexamples/images/sphx_glr_example_offresonance_003.png
   :alt: B0 map [Hz]
   :srcset: /generated/autoexamples/images/sphx_glr_example_offresonance_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (<matplotlib.image.AxesImage object at 0x7452d707b880>, (-0.5, 180.5, 216.5, -0.5), <matplotlib.colorbar.Colorbar object at 0x7452d645b100>, Text(0.5, 1.0, 'B0 map [Hz]'))



.. GENERATED FROM PYTHON SOURCE LINES 58-60

Generate a Spiral trajectory
----------------------------

.. GENERATED FROM PYTHON SOURCE LINES 60-72

.. code-block:: Python


    from mrinufft import initialize_2D_spiral
    from mrinufft.density import voronoi
    from mrinufft.trajectories.utils import DEFAULT_RASTER_TIME

    samples = initialize_2D_spiral(Nc=48, Ns=600, nb_revolutions=10)
    t_read = np.arange(samples.shape[1]) * DEFAULT_RASTER_TIME * 1e-3
    t_read = np.repeat(t_read[None, ...], samples.shape[0], axis=0)
    density = voronoi(samples)

    display_2D_trajectory(samples)




.. image-sg:: /generated/autoexamples/images/sphx_glr_example_offresonance_004.png
   :alt: example offresonance
   :srcset: /generated/autoexamples/images/sphx_glr_example_offresonance_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Axes: xlabel='kx', ylabel='ky'>



.. GENERATED FROM PYTHON SOURCE LINES 73-75

Setup the Operator
==================

.. GENERATED FROM PYTHON SOURCE LINES 75-108

.. code-block:: Python


    from mrinufft import get_operator
    from mrinufft.operators.off_resonance import MRIFourierCorrected

    # Generate standard NUFFT operator
    nufft = get_operator("finufft")(
        samples=samples,
        shape=mri_data.shape,
        density=density,
    )

    # Generate Fourier Corrected operator
    mfi_nufft = MRIFourierCorrected(
        nufft, b0_map=b0map, readout_time=t_read, mask=brain_mask
    )

    # Generate K-Space
    kspace = mfi_nufft.op(mri_data)

    # Reconstruct without field correction
    mri_data_adj = nufft.adj_op(kspace)
    mri_data_adj = np.squeeze(abs(mri_data_adj))

    # Reconstruct with field correction
    mri_data_adj_mfi = mfi_nufft.adj_op(kspace)
    mri_data_adj_mfi = np.squeeze(abs(mri_data_adj_mfi))

    fig2, ax2 = plt.subplots(1, 2)
    ax2[0].imshow(mri_data_adj), ax2[0].axis("off"), ax2[0].set_title("w/o correction")
    ax2[1].imshow(mri_data_adj_mfi), ax2[1].axis("off"), ax2[1].set_title("with correction")

    plt.show()




.. image-sg:: /generated/autoexamples/images/sphx_glr_example_offresonance_005.png
   :alt: w/o correction, with correction
   :srcset: /generated/autoexamples/images/sphx_glr_example_offresonance_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /volatile/github-ci-mind-inria/action-runner/_work/_tool/Python/3.10.14/x64/lib/python3.10/site-packages/mrinufft/_utils.py:94: UserWarning: Samples will be rescaled to [-pi, pi), assuming they were in [-0.5, 0.5)
      warnings.warn(




.. GENERATED FROM PYTHON SOURCE LINES 109-111

The blurring is significantly reduced using the Off-resonance Corrected
operator (right)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 4.786 seconds)


.. _sphx_glr_download_generated_autoexamples_example_offresonance.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/mind-inria/mri-nufft/gh-pages?urlpath=lab/tree/examples/generated/autoexamples/example_offresonance.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: example_offresonance.ipynb <example_offresonance.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: example_offresonance.py <example_offresonance.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: example_offresonance.zip <example_offresonance.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
